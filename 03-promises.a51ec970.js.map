{"mappings":"gfACA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,OAAQC,SAASC,cAAc,UAC/BC,KAAMF,SAASC,cAAc,QAC7BE,WAAYH,SAASC,cAAc,uBACnCG,UAAWJ,SAASC,cAAc,sBAClCI,YAAaL,SAASC,cAAc,yBAGtC,SAASK,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAS,SAACC,EAAKC,GACxBC,YAAY,WACNN,EACFI,EAAI,CAAEN,WAAUC,UAEhBM,EAAI,CAAEP,WAAUC,S,GAEjBA,E,IAIPV,EAAKI,KAAKc,iBAAiB,UAE3B,SAAkBC,GAChBA,EAAMC,iBAEN,IAAMC,EAAQC,OAAOtB,EAAKK,WAAWkB,OAC/BC,EAAOF,OAAOtB,EAAKM,UAAUiB,OAC7BE,EAASH,OAAOtB,EAAKO,YAAYgB,OAEvC,GAAGF,EAAQ,GAAKG,EAAO,GAAKC,EAAS,EACnC3B,EAAA4B,OAAOC,QACJ,iCAIA,GAAsB,IAAnBL,OAAOG,GACb3B,EAAA4B,OAAOC,QAAS,iCAIhB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAQG,IAC1BpB,EAAcoB,EAAGP,EAAQG,EAAOI,GAC7BC,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBZ,EAAA4B,OAAOK,QAAQ,uBAA4CC,OAAnBvB,EAAW,EAAE,QAAYuB,OAANtB,EAAM,M,IAElEuB,OAAM,SAAAH,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBZ,EAAA4B,OAAOQ,QAAQ,sBAAyCF,OAAnBvB,EAAW,EAAE,QAAYuB,OAANtB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport { Notify } from 'notiflix';\n\nconst refs = {\n  button: document.querySelector('button'),\n  form: document.querySelector('form'),\n  delayInput: document.querySelector('input[name=\"delay\"]'),\n  stepInput: document.querySelector('input[name=\"step\"]'),\n  amountInput: document.querySelector('input[name=\"amount\"]'),\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  \n  return new Promise ((res, rej) => {\n    setTimeout (() => {\n      if (shouldResolve) {\n        res({ position, delay })\n      } else {\n        rej({ position, delay })\n      }\n    }, delay)\n  })\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n\n  const delay = Number(refs.delayInput.value);\n  const step = Number(refs.stepInput.value);\n  const amount = Number(refs.amountInput.value);\n\n  if(delay < 0 || step < 0 || amount < 0) {\n    Notify.warning(\n      `Enter number more than 0`\n    );\n  } \n  \n  else if(Number(amount) === 0) {\n    Notify.warning(`Enter number more than 0`);\n  } \n  \n  else{\n    for (let i = 0; i < amount; i++) {\n      createPromise(i, delay + step * i)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position + 1} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position + 1} in ${delay}ms`);\n        });\n    }\n  };\n\n};\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","button","document","querySelector","form","delayInput","stepInput","amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","res","rej","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","step","amount","Notify","warning","i","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.a51ec970.js.map"}